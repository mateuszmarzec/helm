# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: "nginx"
fullnameOverride: "nginx"

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "kong"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: nginx
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: nginx.localhost
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: nginx
              port:
                number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  TEST: "TEST"

secrets:
  dbpassword: AgAG3TiQZjQ6S+eQ/zMv2LgGO4iCSD95UqWQ5xHZFxDGzQPAF4oSk22Xzy/b8eHG9Gs9aQIuXI26e3XyPDqFTrjEqGomFO1mtWTyIpML5r3v68azLHBuvr7S1xL3YJBMqbSAkzv1ZdakpIflwvh6i5QA9PslyQz68FFIIWYo7hkgSTPN9gO78DnJGDkU77TNa8lkqWdJpJ6GcKR+4bVxCiNLRTOyLmQvuhfxwXXlmYRodgBcOPxg8XB61hDB6PGZdgpY3AoHgumFdUlfFeQkX5qymi2910rikIL9EIIP5/7KyRUY2hp+qrYBNvvBgPlHNFHDUnDPaDrZeNekPNRkaWnbwxkN/v1Ju7n2QWSeluXxE/VkAiqJ4cnYcPwcI+CihLd14nyfkVZ40SegUTEsqoOfjs2Nfy1NR0Kv8Z35XCK4exa8f6cX4puKvX5JAGPyMspNIGpLPlrRSyAHEdbvqkzQGi5gXp+v9rDNxx/nE5OQ1k+TEA6wpX+sYWqarTbf9GHftSfFas1SUXtr2eUCUV4tl0bnai91JL665nGoENf5QlO1rOnGwbouglMUNSUZ0sklQJm/a7uncXb84lbng5VCizmgEj9KLi9EYVzmaB9ahDYzJzMQeCEEaNt7/pRl0Z9qzySk4jlCpl7j3CDV8baNmHEeMXfTjkQszxTH6zuhnWeG73r/UPumgToWhXPHJzPwanv3bScyEVU6G52caBFCuc3Zry5ORDN2RC6S9C1VCl8wv2424PMw+sm+7E/24CxwsavxiGo4hEuaCjfDOiTlhXIvH91vvdJmKkqwme2pRrXxpCEZyJfGxNCSO2dvPkjrmpVvSEvu1l3GMndK7AR760eyMKVjpafxarG+uWyM
